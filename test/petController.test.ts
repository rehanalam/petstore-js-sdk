/**
 * Swagger Petstore - OpenAPI 3.0Lib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { PetController, Status2Enum } from '../src';
import { testClient } from './testClient';
import { expectHeadersToMatch, makeApiCall } from './testHelper';

describe('PetController', () => {
  let controller : PetController;

  beforeAll(() => {
    controller = new PetController(testClient);
  });

  it('should Test findPetsByStatus', async () => {
    const status = Status2Enum.Available;

    const response = await makeApiCall(
      () => controller.findPetsByStatus(status)
    );

    expect(response.statusCode).toBe(200);

    const expectedHeaders = { 'Content-Type': ['application/json', true] };

    expectHeadersToMatch(response.headers, expectedHeaders);
  });

  it('should Test findPetsByStatus1', async () => {
    const status = Status2Enum.Available;

    const response = await makeApiCall(
      () => controller.findPetsByStatus(status)
    );

    expect(response.statusCode).toBe(200);

    const expectedHeaders = { 'Content-Type': ['application/xml', true] };

    expectHeadersToMatch(response.headers, expectedHeaders);
  });

  it('should Test findPetsByTags', async () => {
    const response = await makeApiCall(
      () => controller.findPetsByTags(undefined)
    );

    expect(response.statusCode).toBe(200);

    const expectedHeaders = { 'Content-Type': ['application/json', true] };

    expectHeadersToMatch(response.headers, expectedHeaders);
  });

  it('should Test findPetsByTags1', async () => {
    const response = await makeApiCall(
      () => controller.findPetsByTags(undefined)
    );

    expect(response.statusCode).toBe(200);

    const expectedHeaders = { 'Content-Type': ['application/xml', true] };

    expectHeadersToMatch(response.headers, expectedHeaders);
  });
});
